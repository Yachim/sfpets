# https://realpython.com/django-nginx-gunicorn/#making-your-site-production-ready-with-https
# https://mindsers.blog/post/https-using-nginx-certbot-docker/

version: "3.8"
services:
  frontend:
    container_name: pets_frontend
    build: "./client"

    ports:
      - "5173:5173"

  wsgi:
    container_name: pets_backend
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DB_USR=${DB_USR}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - BIND_ADDRESS=${BIND_ADDRESS}
    build: "./server"

    entrypoint: "./entrypoint_docker.sh"
    stdin_open: true # docker run -i
    tty: true        # docker run -t

    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    restart: always
    
  db:
    container_name: pets_db
    image: postgres:15-bullseye
    restart: always
    environment:
      - POSTGRES_USER=${DB_USR}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pets_pg:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USR} -d ${DB_NAME}"]
      interval: 5s
      timeout: 60s
      retries: 10

volumes:
  pets_pg:
    external: true
